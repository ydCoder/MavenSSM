<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 配置整合mybatis-->
    <!--1.配置数据库相关参数 -->
    <!--类路径：src开始-->
    <context:property-placeholder location="classpath:resource/jdbc.properties" />
    <!-- 数据库连接池-->
    <!-- 2数据库连接池 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!-- 配置连接池属性 -->
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>

      <!--  &lt;!&ndash; c3p0连接池的私有属性 &ndash;&gt;
        <property name="maxPoolSize" value="30" />
        <property name="minPoolSize" value="10" />
        &lt;!&ndash; 关闭连接后不自动commit &ndash;&gt;
        <property name="autoCommitOnClose" value="false" />
        &lt;!&ndash; 获取连接超时时间 &ndash;&gt;
        <property name="checkoutTimeout" value="10000" />
        &lt;!&ndash; 当获取连接失败重试次数 &ndash;&gt;
        <property name="acquireRetryAttempts" value="2" />-->
    </bean>



    <!--3 配置SqlSessionFactory对象 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 配置mybatis全局配置文件：mybatis-config.xml-->
        <property name="configLocation" value="classpath:mybatis-config.xml" />
        <!-- 扫描entity包，使用别名配置(在mybatis中可以使用别名，即entity的名称) -->
        <property name="typeAliasesPackage" value="org.mavenssm.entity"/>
        <!-- 扫描sql  mapper的配置文件 -->
        <property name="mapperLocations" value="classpath:resource/mapper/*.xml"/>
    </bean>


    <!-- 4配置扫描dao接口包，动态实现dao接口，注入到Spring中-->
    <!-- 使用mybatis的接口代理开发模式(必须保证接口和对应的mybatis的xml名称相同，且在一个文件夹内) -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">

     <!--   注入SQLSessionFactory-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--给出需要扫描的Dao接口包,将dao实现类注入到spring中-->
        <property name="basePackage" value="org.mavenssm.dao"/>
    </bean>

</beans>
<!--
注意：完成配置后测试此时并没有springmvc相关的配置整合应在service后才引入-->
